--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create panel_info
local panel_info = ccui.Layout:create()
panel_info:ignoreContentAdaptWithSize(false)
panel_info:setClippingEnabled(false)
panel_info:setBackGroundColorOpacity(102)
panel_info:setTouchEnabled(true);
panel_info:setLayoutComponentEnabled(true)
panel_info:setName("panel_info")
panel_info:setTag(378)
panel_info:setCascadeColorEnabled(true)
panel_info:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_info)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
Layer:addChild(panel_info)

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("game_res/info/ddz_tanchuang_dikuang.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(379)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(650.1120, 349.9920)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5079)
layout:setPositionPercentY(0.4861)
layout:setPercentWidth(0.5320)
layout:setPercentHeight(0.7819)
layout:setSize({width = 681.0000, height = 563.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(309.6120)
layout:setRightMargin(289.3880)
layout:setTopMargin(88.5080)
layout:setBottomMargin(68.4920)
panel_info:addChild(bg)

--Create bnt_close
local bnt_close = ccui.Button:create()
bnt_close:ignoreContentAdaptWithSize(false)
bnt_close:loadTextureNormal("game_res/btn_close.png",0)
bnt_close:loadTexturePressed("game_res/btn_close.png",0)
bnt_close:loadTextureDisabled("game_res/btn_close.png",0)
bnt_close:setTitleFontSize(14)
bnt_close:setTitleColor({r = 65, g = 65, b = 70})
bnt_close:setScale9Enabled(true)
bnt_close:setCapInsets({x = 15, y = 11, width = 37, height = 45})
bnt_close:setLayoutComponentEnabled(true)
bnt_close:setName("bnt_close")
bnt_close:setTag(380)
bnt_close:setCascadeColorEnabled(true)
bnt_close:setCascadeOpacityEnabled(true)
bnt_close:setPosition(630.9998, 512.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bnt_close)
layout:setPositionPercentX(0.9266)
layout:setPositionPercentY(0.9094)
layout:setPercentWidth(0.0984)
layout:setPercentHeight(0.1190)
layout:setSize({width = 67.0000, height = 67.0000})
layout:setLeftMargin(597.4998)
layout:setRightMargin(16.5002)
layout:setTopMargin(17.5000)
layout:setBottomMargin(478.5000)
bg:addChild(bnt_close)

--Create btn_paixing
local btn_paixing = ccui.Button:create()
btn_paixing:ignoreContentAdaptWithSize(false)
btn_paixing:loadTextureNormal("game_res/info/ddz_tanchuang_paixing2.png",0)
btn_paixing:loadTexturePressed("game_res/info/ddz_tanchuang_paixing2.png",0)
btn_paixing:loadTextureDisabled("game_res/info/ddz_tanchuang_paixing1.png",0)
btn_paixing:setTitleFontSize(14)
btn_paixing:setTitleColor({r = 65, g = 65, b = 70})
btn_paixing:setScale9Enabled(true)
btn_paixing:setCapInsets({x = 15, y = 11, width = 132, height = 30})
btn_paixing:setLayoutComponentEnabled(true)
btn_paixing:setName("btn_paixing")
btn_paixing:setTag(381)
btn_paixing:setCascadeColorEnabled(true)
btn_paixing:setCascadeOpacityEnabled(true)
btn_paixing:setPosition(103.9400, 512.6300)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_paixing)
layout:setPositionPercentX(0.1526)
layout:setPositionPercentY(0.9105)
layout:setPercentWidth(0.2379)
layout:setPercentHeight(0.0924)
layout:setSize({width = 162.0000, height = 52.0000})
layout:setLeftMargin(22.9400)
layout:setRightMargin(496.0600)
layout:setTopMargin(24.3700)
layout:setBottomMargin(486.6300)
bg:addChild(btn_paixing)

--Create btn_rules
local btn_rules = ccui.Button:create()
btn_rules:ignoreContentAdaptWithSize(false)
btn_rules:loadTextureNormal("game_res/info/ddz_tanchuang_guize2.png",0)
btn_rules:loadTexturePressed("game_res/info/ddz_tanchuang_guize2.png",0)
btn_rules:loadTextureDisabled("game_res/info/ddz_tanchuang_guize1.png",0)
btn_rules:setTitleFontSize(14)
btn_rules:setTitleColor({r = 65, g = 65, b = 70})
btn_rules:setScale9Enabled(true)
btn_rules:setCapInsets({x = 15, y = 11, width = 132, height = 30})
btn_rules:setLayoutComponentEnabled(true)
btn_rules:setName("btn_rules")
btn_rules:setTag(382)
btn_rules:setCascadeColorEnabled(true)
btn_rules:setCascadeOpacityEnabled(true)
btn_rules:setPosition(298.0000, 510.8200)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_rules)
layout:setPositionPercentX(0.4376)
layout:setPositionPercentY(0.9073)
layout:setPercentWidth(0.2379)
layout:setPercentHeight(0.0924)
layout:setSize({width = 162.0000, height = 52.0000})
layout:setLeftMargin(217.0000)
layout:setRightMargin(302.0000)
layout:setTopMargin(26.1800)
layout:setBottomMargin(484.8200)
bg:addChild(btn_rules)

--Create scrollview_paixing
local scrollview_paixing = ccui.ScrollView:create()
scrollview_paixing:setBounceEnabled(true)
scrollview_paixing:setInnerContainerSize({width = 630, height = 430})
scrollview_paixing:ignoreContentAdaptWithSize(false)
scrollview_paixing:setClippingEnabled(true)
scrollview_paixing:setBackGroundColorOpacity(102)
scrollview_paixing:setLayoutComponentEnabled(true)
scrollview_paixing:setName("scrollview_paixing")
scrollview_paixing:setTag(383)
scrollview_paixing:setCascadeColorEnabled(true)
scrollview_paixing:setCascadeOpacityEnabled(true)
scrollview_paixing:setPosition(27.3137, 18.5452)
layout = ccui.LayoutComponent:bindLayoutComponent(scrollview_paixing)
layout:setPositionPercentX(0.0401)
layout:setPositionPercentY(0.0329)
layout:setPercentWidth(0.9251)
layout:setPercentHeight(0.7638)
layout:setSize({width = 630.0000, height = 430.0000})
layout:setLeftMargin(27.3137)
layout:setRightMargin(23.6863)
layout:setTopMargin(114.4548)
layout:setBottomMargin(18.5452)
bg:addChild(scrollview_paixing)

--Create scrollview_rules
local scrollview_rules = ccui.ScrollView:create()
scrollview_rules:setBounceEnabled(true)
scrollview_rules:setInnerContainerSize({width = 630, height = 430})
scrollview_rules:ignoreContentAdaptWithSize(false)
scrollview_rules:setClippingEnabled(true)
scrollview_rules:setBackGroundColorOpacity(102)
scrollview_rules:setLayoutComponentEnabled(true)
scrollview_rules:setName("scrollview_rules")
scrollview_rules:setTag(384)
scrollview_rules:setCascadeColorEnabled(true)
scrollview_rules:setCascadeOpacityEnabled(true)
scrollview_rules:setPosition(27.3100, 18.5500)
layout = ccui.LayoutComponent:bindLayoutComponent(scrollview_rules)
layout:setPositionPercentX(0.0401)
layout:setPositionPercentY(0.0329)
layout:setPercentWidth(0.9251)
layout:setPercentHeight(0.7638)
layout:setSize({width = 630.0000, height = 430.0000})
layout:setLeftMargin(27.3100)
layout:setRightMargin(23.6900)
layout:setTopMargin(114.4500)
layout:setBottomMargin(18.5500)
bg:addChild(scrollview_rules)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

