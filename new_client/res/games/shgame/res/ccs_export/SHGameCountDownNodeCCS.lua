--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Image_time
local Image_time = ccui.ImageView:create()
Image_time:ignoreContentAdaptWithSize(false)
Image_time:loadTexture("game_res/mainView/sh_djs_1.png",0)
Image_time:setLayoutComponentEnabled(true)
Image_time:setName("Image_time")
Image_time:setTag(812)
Image_time:setCascadeColorEnabled(true)
Image_time:setCascadeOpacityEnabled(true)
Image_time:setPosition(0.0000, -7.0415)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_time)
layout:setSize({width = 117.0000, height = 119.0000})
layout:setLeftMargin(-58.5000)
layout:setRightMargin(-58.5000)
layout:setTopMargin(-52.4585)
layout:setBottomMargin(-66.5415)
Node:addChild(Image_time)

--Create Sprite_bar
local Sprite_bar = cc.Sprite:create("game_res/mainView/sh_djs_2.png")
Sprite_bar:setName("Sprite_bar")
Sprite_bar:setTag(813)
Sprite_bar:setCascadeColorEnabled(true)
Sprite_bar:setCascadeOpacityEnabled(true)
Sprite_bar:setPosition(58.5000, 59.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(Sprite_bar)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 117.0000, height = 119.0000})
Sprite_bar:setBlendFunc({src = 1, dst = 771})
Image_time:addChild(Sprite_bar)

--Create Image_time2
local Image_time2 = ccui.ImageView:create()
Image_time2:ignoreContentAdaptWithSize(false)
Image_time2:loadTexture("game_res/mainView/sh_djs_3.png",0)
Image_time2:setLayoutComponentEnabled(true)
Image_time2:setName("Image_time2")
Image_time2:setTag(810)
Image_time2:setCascadeColorEnabled(true)
Image_time2:setCascadeOpacityEnabled(true)
Image_time2:setPosition(0.0000, -7.0370)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_time2)
layout:setSize({width = 117.0000, height = 119.0000})
layout:setLeftMargin(-58.5000)
layout:setRightMargin(-58.5000)
layout:setTopMargin(-52.4630)
layout:setBottomMargin(-66.5370)
Node:addChild(Image_time2)

--Create AtlasLabel_time
local AtlasLabel_time = ccui.TextAtlas:create([[15]],
													"game_res/mainView/sh_djs_1_szt.png",
													29,
													41,
													"/")
AtlasLabel_time:setLayoutComponentEnabled(true)
AtlasLabel_time:setName("AtlasLabel_time")
AtlasLabel_time:setTag(916)
AtlasLabel_time:setCascadeColorEnabled(true)
AtlasLabel_time:setCascadeOpacityEnabled(true)
AtlasLabel_time:setPosition(56.1744, 58.3644)
layout = ccui.LayoutComponent:bindLayoutComponent(AtlasLabel_time)
layout:setPositionPercentX(0.4801)
layout:setPositionPercentY(0.4905)
layout:setPercentWidth(0.4957)
layout:setPercentHeight(0.3445)
layout:setSize({width = 58.0000, height = 41.0000})
layout:setLeftMargin(27.1744)
layout:setRightMargin(31.8256)
layout:setTopMargin(40.1356)
layout:setBottomMargin(37.8644)
Image_time2:addChild(AtlasLabel_time)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

