--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Image_bg
local Image_bg = ccui.ImageView:create()
Image_bg:ignoreContentAdaptWithSize(false)
Image_bg:loadTexture("game_res/mainView/sh_kuang_2.png",0)
Image_bg:setLayoutComponentEnabled(true)
Image_bg:setName("Image_bg")
Image_bg:setTag(66)
Image_bg:setCascadeColorEnabled(true)
Image_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_bg)
layout:setSize({width = 275.0000, height = 43.0000})
layout:setLeftMargin(-137.5000)
layout:setRightMargin(-137.5000)
layout:setTopMargin(-21.5000)
layout:setBottomMargin(-21.5000)
Node:addChild(Image_bg)

--Create Image_signal
local Image_signal = ccui.ImageView:create()
Image_signal:ignoreContentAdaptWithSize(false)
Image_signal:loadTexture("game_res/mainView/ddz_wifi_2.png",0)
Image_signal:setLayoutComponentEnabled(true)
Image_signal:setName("Image_signal")
Image_signal:setTag(67)
Image_signal:setCascadeColorEnabled(true)
Image_signal:setCascadeOpacityEnabled(true)
Image_signal:setPosition(35.0177, 21.8985)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_signal)
layout:setPositionPercentX(0.1273)
layout:setPositionPercentY(0.5093)
layout:setPercentWidth(0.1600)
layout:setPercentHeight(0.8140)
layout:setSize({width = 44.0000, height = 35.0000})
layout:setLeftMargin(13.0177)
layout:setRightMargin(217.9823)
layout:setTopMargin(3.6015)
layout:setBottomMargin(4.3985)
Image_bg:addChild(Image_signal)

--Create Image_electric
local Image_electric = ccui.ImageView:create()
Image_electric:ignoreContentAdaptWithSize(false)
Image_electric:loadTexture("game_res/mainView/ddz_dl_1.png",0)
Image_electric:setLayoutComponentEnabled(true)
Image_electric:setName("Image_electric")
Image_electric:setTag(69)
Image_electric:setCascadeColorEnabled(true)
Image_electric:setCascadeOpacityEnabled(true)
Image_electric:setPosition(137.4517, 22.2000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_electric)
layout:setPositionPercentX(0.4998)
layout:setPositionPercentY(0.5163)
layout:setPercentWidth(0.2473)
layout:setPercentHeight(0.6977)
layout:setSize({width = 68.0000, height = 30.0000})
layout:setLeftMargin(103.4517)
layout:setRightMargin(103.5483)
layout:setTopMargin(5.8000)
layout:setBottomMargin(7.2000)
Image_bg:addChild(Image_electric)

--Create LoadingBar_1
local LoadingBar_1 = ccui.LoadingBar:create()
LoadingBar_1:loadTexture("game_res/mainView/ddz_dl_zc.png",0)
LoadingBar_1:ignoreContentAdaptWithSize(false)
LoadingBar_1:setLayoutComponentEnabled(true)
LoadingBar_1:setName("LoadingBar_1")
LoadingBar_1:setTag(70)
LoadingBar_1:setCascadeColorEnabled(true)
LoadingBar_1:setCascadeOpacityEnabled(true)
LoadingBar_1:setPosition(32.0006, 15.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(LoadingBar_1)
layout:setPositionPercentX(0.4706)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 68.0000, height = 30.0000})
layout:setLeftMargin(-1.9994)
layout:setRightMargin(1.9994)
Image_electric:addChild(LoadingBar_1)

--Create Text_time
local Text_time = ccui.Text:create()
Text_time:ignoreContentAdaptWithSize(true)
Text_time:setTextAreaSize({width = 0, height = 0})
Text_time:setFontSize(20)
Text_time:setString([[00:00]])
Text_time:setLayoutComponentEnabled(true)
Text_time:setName("Text_time")
Text_time:setTag(68)
Text_time:setCascadeColorEnabled(true)
Text_time:setCascadeOpacityEnabled(true)
Text_time:setAnchorPoint(1.0000, 0.5000)
Text_time:setPosition(262.9422, 20.9135)
layout = ccui.LayoutComponent:bindLayoutComponent(Text_time)
layout:setPositionPercentX(0.9562)
layout:setPositionPercentY(0.4864)
layout:setPercentWidth(0.1818)
layout:setPercentHeight(0.4651)
layout:setSize({width = 50.0000, height = 20.0000})
layout:setLeftMargin(212.9422)
layout:setRightMargin(12.0578)
layout:setTopMargin(12.0865)
layout:setBottomMargin(10.9135)
Image_bg:addChild(Text_time)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

